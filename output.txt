yarn run v1.22.10
$ source .env && forge script script/MintDev.s.sol:Mint --rpc-url $GOERLI_RPC_URL --broadcast -vvvv
No files changed, compilation skipped
Traces:
  [612549] [33m→ [0m[33mnew[0m Mint@0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519
    └─ [32m← [0m2949 bytes of code

  [28293] [31mMint[0m::[31mrun[0m() [33m[0m
    ├─ [0] [34mVM[0m::[34menvUint[0m(PRIVATE_KEY) [33m[staticcall][0m
    │   └─ [34m← [0m<env var value>
    ├─ [0] [34mVM[0m::[34mstartBroadcast[0m(<pk>) [33m[0m
    │   └─ [34m← [0m()
    ├─ [248] [31m0xc3023a2c9f7B92d1dd19F488AF6Ee107a78Df9DB[0m::[31mcreate[0m(Test, TST, Test Description, let points=[],inc=0,xOffset=0,squigCount=0,hue=0,pointSpeed=[];const maxPoints=6e3,maxSpeed=5;function setup(){"undefined"!=typeof seed&&(randomSeed(seed),noiseSeed(seed)),createCanvas(window.innerWidth,window.innerHeight),xOffset=random(1,10),squigCount=random(10,40),hue=random(0,255),pointSpeed=[random(-5,5),random(-5,5),]}function draw(){inc+=.005,colorMode(HSB),background(hue+20,100,255);for(let n=0;n<squigCount;n++)generatePoint(n);points.length>6e3&&(points=points.slice(points.length-6e3,points.length)),renderPoints(),corrupt()}function generatePoint(n){let t=10*n;return points.push([noise(inc+t)*width,noise(inc+t*xOffset)*height,5*noise(inc),10*noise(inc*xOffset),[hue,(squigCount-n)*(255/squigCount),n*(255/squigCount),],])}function renderPoints(){for(let n=0;n<points.length;n++){push();let[t,e,i,o,$]=points[n];translate(t,e),noStroke(),fill([...$]),ellipse(0,0,i,o),pop()}}function corrupt(){for(let n=0;n<points.length;n++){let[t,e,i,o,$]=points[n],[s,u]=pointSpeed;points[n]=[noise(inc)*s+t,noise(inc)*u+e,noise(10*inc)+i,noise(10*inc)+o,$,]}}, 0, 9999999999999) [33m[0m
    │   └─ [31m← [0m"EvmError: Revert"
    └─ [31m← [0m"EvmError: Revert"


info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
